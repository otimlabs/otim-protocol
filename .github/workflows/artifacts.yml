name: Sync Artifacts with Offchain Services

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_call:
    inputs:
      protocol_ref:
        description: Branch, tag or SHA to checkout for otim-protocol
        default: main
        type: string
      offchain_ref:
        description: Branch, tag or SHA to checkout for otim-offchain
        type: string
        default: main
    secrets:
      GH_APP_ID:
        description: GitHub App ID for token generation
        required: true
      GH_APP_PRIVATE_KEY:
        description: GitHub App private key for token generation
        required: true
    outputs:
      artifacts_match:
        description: Whether artifacts match between repositories
        value: ${{ jobs.verify-artifacts.outputs.artifacts_match }}
 
  workflow_dispatch:
    inputs:
      protocol_ref:
        description: Branch, tag or SHA to checkout for otim-protocol
        default: main
        type: string
      offchain_ref:
        description: Branch, tag or SHA to checkout for otim-offchain
        default: main
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  verify-artifacts:
    name: Verify Contract Artifacts
    runs-on: ubuntu-latest
    outputs:
      artifacts_match: ${{ steps.compare-artifacts.outputs.artifacts_match }}
      pr_url: ${{ steps.create-pr.outputs.pull-request-url }}
    steps:
      - name: Generate GitHub App Token
        id: bot_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout otim-protocol
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: otimlabs/otim-protocol
          token: ${{ steps.bot_token.outputs.token }}
          path: protocol
          ref: ${{ inputs.protocol_ref || 'main' }}

      - name: Checkout otim-offchain
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: otimlabs/otim-offchain
          token: ${{ steps.bot_token.outputs.token }}
          path: offchain
          ref: ${{ inputs.offchain_ref || 'main' }}

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@de808b1eea699e761c404bda44ba8f21aba30b2c # v1.3.1
        with:
          version: nightly
          cache-key: ${{ github.job }}-${{ github.sha }}

      - name: Build otim-protocol
        id: build-protocol
        run: |
          cd ./protocol
          # Output the short commit hash for reference
          echo "protocol_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

          forge soldeer update --config-location foundry
          forge build ./src --sizes

      - uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1 # v1
        with:
          toolchain: nightly

      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - name: Install rust-script
        run: |
          curl -LsSf https://github.com/fornwall/rust-script/releases/latest/download/rust-script-x86_64-unknown-linux-gnu.tar.gz | tar xzf -
          sudo install rust-script /usr/local/bin/

      - name: Compare Artifacts
        id: compare-artifacts
        continue-on-error: true
        run: |
          set -e
          mkdir -p comparison_reports

          echo "::group::Running artifact comparison"
          COMPARISON_OUTPUT=$(rust-script protocol/.github/scripts/directory-comparison.rs \
            "./protocol/out" "./offchain/crates/contracts/artifacts" "build-info" 2>&1) || {
              MATCH_STATUS=$?
              echo "$COMPARISON_OUTPUT" > comparison_reports/result.txt
              echo "::endgroup::"
              echo "artifacts_match=false" >> $GITHUB_OUTPUT
              echo "::error::❌ Differences detected between repositories"
              echo "$COMPARISON_OUTPUT"
              exit $MATCH_STATUS
          }

          echo "$COMPARISON_OUTPUT" > comparison_reports/result.txt
          echo "::endgroup::"
          echo "artifacts_match=true" >> $GITHUB_OUTPUT
          echo "✅ All files match in structure and content!"

      - name: Create PR description
        id: create-pr-description
        if: steps.compare-artifacts.outputs.artifacts_match == 'false'
        run: |
          REPORT_DIR="./comparison_reports"
          
          # Create a PR description
          cat > "$REPORT_DIR/pr_description.md" << EOF
          This PR syncs the build artifacts from \`otim-protocol\`.

          ### Differences
          \`\`\`
          $(cat "$REPORT_DIR/result.txt")
          \`\`\`

          ### Git References
          - Protocol: \`${{ inputs.protocol_ref || 'main' }}\` (commit: \`${{ steps.build-protocol.outputs.protocol_sha }}\`)
          - Offchain: \`${{ inputs.offchain_ref || 'main' }}\`
          
          [View Comparison](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          EOF

      # Only run the following PR steps if the artifacts don't match and running on main
      - name: Prepare otim-offchain directory for sync PR
        if: steps.compare-artifacts.outputs.artifacts_match == 'false' && github.ref == 'refs/heads/main'
        run: |
          cd ./offchain
          rm -rf ./crates/contracts/artifacts
          cp -r ../protocol/out/ ./crates/contracts/
          mv ./crates/contracts/out ./crates/contracts/artifacts

      - name: Create or edit PR with artifact updates
        id: create-pr
        if: steps.compare-artifacts.outputs.artifacts_match == 'false' && github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ steps.bot_token.outputs.token }}
          commit-message: "sync: otim-protocol artifacts"
          title: "Sync: `otim-protocol` build artifacts"
          body-path: "./comparison_reports/pr_description.md"
          branch: "chore/sync-artifacts"
          branch-suffix: short-commit-hash
          base: ${{ inputs.offchain_ref || 'main' }}
          path: "./offchain"
          delete-branch: false

      - name: Upload comparison reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: artifact-comparison-reports
          path: |
            comparison_reports/
          retention-days: 7

  notify-slack:
    needs: verify-artifacts
    runs-on: ubuntu-latest
    if: needs.verify-artifacts.outputs.artifacts_match == 'false' && github.ref == 'refs/heads/main'
    steps:
      - name: Send Slack notification
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          channel-id: ci-logs
          slack-message: |
            ❌ Protocol and Offchain-Service contract artifacts are not in-sync!

            See: <${{ needs.verify-artifacts.outputs.pr_url }}|Offchain merge PR>

            *Protocol reference:* `${{ inputs.protocol_ref || 'main' }}`
            *Offchain reference:* `${{ inputs.offchain_ref || 'main' }}`

            Artifacts comparison: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|link>
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
